{{>partial_header}}
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using {{packageName}}.API.Models;

namespace {{packageName}}.API.Controllers
{ 
    private {{packageName}}Context _db;
    private readonly IConfigurationRoot _config;
    private readonly ApiSettings _apiSettings;

    {{#operations}}
    /// <summary>
    /// API Controller for {{class}}
    /// </summary>{{#description}}
    [Description("{{description}}")]{{/description}}
    public class {{classname}}Controller : Controller
    {
        private DomainRepository _domain = new DomainRepository(_db);
 
        public {{classname}}Controller({{packageName}}Context db, IConfigurationRoot config, IOptions<ApiSettings> apiSettings) {
            this._domain = new DomainRepository(db);
            this._config = config;
            this._apiSettings = apiSettings.Value;
        }
        {{#operation}}
     
        /// <summary>
        /// {{#summary}}{{summary}}{{/summary}}
        /// </summary>
        {{#notes}}/// <remarks>{{notes}}</remarks>{{/notes}}{{#allParams}}
        /// <param name="{{paramName}}">{{description}}</param>{{/allParams}}{{#responses}}
        /// <response code="{{code}}">{{message}}</response>{{/responses}}
        [{{httpMethod}}("{{basePathWithoutHost}}{{path}}")]
        public virtual {{#returnType}}IActionResult{{/returnType}}{{^returnType}}void{{/returnType}} {{operationId}}({{#allParams}}{{>pathParam}}{{>queryParam}}{{>bodyParam}}{{>formParam}}{{>headerParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
        { 
            // TODO: Implement Swagger exampleData JSON for placeholder operation
            // var example = exampleJson != null ? JsonConvert.DeserializeObject
            try
            {
                {{#returnType}}
                    {{>returnDataType}} returnData = _domain.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
                    return new OkObjectResult(returnData);{{/returnType}}{{^returnType}}
                    return Ok();{{/returnType}}
            }
            catch (Exception e)
            {
                //TODO:  Get more detail about return Error?  Throw custom Error types/messages within the implementation?
                return BadRequest(e.Message);
            }
        }
    {{/operation}}
    }
{{/operations}}
}
